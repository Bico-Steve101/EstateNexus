# Generated by Django 5.0.3 on 2024-04-04 10:38

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Manager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('description', models.TextField()),
                ('phone_number', models.CharField(max_length=15)),
                ('address', models.CharField(max_length=255)),
                ('county', models.CharField(max_length=100)),
                ('zip_code', models.CharField(max_length=10)),
                ('country', models.CharField(choices=[('Kenya', 'Kenya'), ('Uganda', 'Uganda'), ('Tanzania', 'Tanzania'), ('Burundi', 'Burundi'), ('Comoros', 'Comoros'), ('Djobouti', 'Djobouti'), ('Eritrea', 'Eritrea'), ('Ethiopia', 'Ethiopia'), ('Madagascar', 'Madagascar'), ('Malawi', 'Malawi'), ('Mauritius', 'Mauritius'), ('Mozambique', 'Mozambique'), ('Rwanda', 'Rwanda'), ('Seychelles', 'Seychelles'), ('Somalia', 'Somalia'), ('South_sudan', 'South Sudan'), ('Zambia', 'Zambia'), ('Zimbabwe', 'Zimbabwe')], max_length=50)),
                ('language', models.CharField(choices=[('Swahili', 'Swahili'), ('English', 'English'), ('French', 'French'), ('German', 'German'), ('Portuguese', 'Portuguese')], max_length=50)),
                ('photo', models.ImageField(default='avatars/avatar.jpg', upload_to='media/managers')),
                ('joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_name', models.CharField(max_length=255)),
                ('profession', models.CharField(max_length=255)),
                ('rating', models.IntegerField()),
                ('testimonial_text', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('photo', models.ImageField(default='avatars/avatar.jpg', upload_to='media/testimonials')),
            ],
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('option', models.CharField(choices=[('rent', 'Rent'), ('sale', 'Sale')], max_length=10)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('description', models.TextField()),
                ('phone_number', models.CharField(max_length=15)),
                ('address', models.CharField(max_length=255)),
                ('county', models.CharField(max_length=100)),
                ('zip_code', models.CharField(max_length=10)),
                ('country', models.CharField(max_length=100)),
                ('type', models.CharField(choices=[('apartment', 'Apartment'), ('condominium', 'Condominium'), ('townhouse', 'Townhouse'), ('land', 'Land'), ('commercial_property', 'Commercial Property'), ('mobile_home', 'Mobile Home'), ('loft', 'Loft'), ('cottage', 'Cottage'), ('penthouse', 'Penthouse'), ('studio', 'Studio'), ('villa', 'Villa'), ('bungalow', 'Bungalow'), ('duplex', 'Duplex'), ('house', 'House'), ('office', 'Office'), ('home', 'Home')], max_length=50)),
                ('category', models.CharField(choices=[('residential', 'Residential'), ('commercial', 'Commercial'), ('industrial', 'Industrial'), ('vocational_renting', 'Vocational Renting'), ('land', 'Land'), ('mixed_use', 'Mixed Use'), ('retail', 'Retail'), ('office', 'Office'), ('warehouse', 'Warehouse'), ('hospitality', 'Hospitality'), ('special_purpose', 'Special Purpose'), ('agricultural', 'Agricultural'), ('other', 'Other')], max_length=100)),
                ('zoning', models.CharField(choices=[('residential', 'Residential'), ('commercial', 'Commercial'), ('industrial', 'Industrial'), ('mixed_use', 'Mixed Use'), ('agricultural', 'Agricultural'), ('historical_preservation', 'Historical Preservation'), ('open_space', 'Open Space'), ('recreational', 'Recreational'), ('special_use', 'Special Use'), ('variances', 'Variances'), ('overlay_zoning', 'Overlay Zoning'), ('cluster_zoning', 'Cluster Zoning'), ('conservation_zoning', 'Conservation Zoning'), ('planned_unit_development', 'Planned Unit Development'), ('transition_oriented_development', 'Transition Oriented Development'), ('urban_renewal', 'Urban Renewal'), ('waterfront_zoning', 'Waterfront Zoning'), ('other', 'Other')], max_length=50)),
                ('size', models.DecimalField(decimal_places=2, max_digits=10)),
                ('special_feature', models.CharField(max_length=255)),
                ('price', models.DecimalField(decimal_places=0, max_digits=10)),
                ('photo', models.ImageField(default='avatars/proerty-empty.jpg', upload_to='media/properties/photos')),
                ('company', models.CharField(max_length=255)),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('manager', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='property_manager', to='User.manager')),
            ],
        ),
        migrations.AddField(
            model_name='manager',
            name='property',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='property_to_manage', to='User.property'),
        ),
        migrations.CreateModel(
            name='Tenant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('id_no', models.CharField(max_length=20)),
                ('phone_number', models.CharField(max_length=15)),
                ('house_number', models.CharField(max_length=10)),
                ('no_rooms', models.IntegerField()),
                ('occupants', models.IntegerField()),
                ('vehicle_no', models.CharField(max_length=15)),
                ('tenant_id', models.CharField(max_length=20)),
                ('sum_insured', models.DecimalField(decimal_places=2, max_digits=10)),
                ('lease_start_date', models.DateField()),
                ('lease_end_date', models.DateField()),
                ('photo', models.ImageField(default='avatars/avatar.jpg', upload_to='media/tenants')),
                ('joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=100)),
                ('last_payment_update_month', models.IntegerField(default=0)),
                ('last_payment_update_year', models.IntegerField(default=0)),
                ('total_monthly_payments', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('manager', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tenants_manger', to='User.manager')),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tenants', to='User.property')),
            ],
        ),
        migrations.CreateModel(
            name='ScheduledMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('send_at', models.DateTimeField()),
                ('is_sent', models.BooleanField(default=False)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='User.tenant')),
            ],
        ),
        migrations.AddField(
            model_name='property',
            name='tenant',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rented_property', to='User.tenant'),
        ),
        migrations.CreateModel(
            name='PaypalPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('payment_id', models.CharField(editable=False, max_length=100, unique=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phone_number', models.CharField(max_length=15)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='User.tenant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MPesaPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('payment_id', models.CharField(editable=False, max_length=100, unique=True)),
                ('phone_number', models.CharField(max_length=15)),
                ('status', models.IntegerField(choices=[(1, 'Pending'), (0, 'Complete')], default=1)),
                ('checkout_request_id', models.CharField(blank=True, max_length=100, null=True)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='User.tenant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('is_property_message', models.BooleanField(default=False)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_messages', to='User.property')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to='User.tenant')),
            ],
        ),
        migrations.AddField(
            model_name='manager',
            name='tenant',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='manager_test_chat', to='User.tenant'),
        ),
        migrations.CreateModel(
            name='CreditCardPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('payment_id', models.CharField(editable=False, max_length=100, unique=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('card_number', models.CharField(max_length=16)),
                ('expiry_date', models.CharField(max_length=5)),
                ('cvc', models.CharField(max_length=3)),
                ('country', models.CharField(choices=[('Kenya', 'Kenya'), ('Uganda', 'Uganda'), ('Tanzania', 'Tanzania'), ('Ethiopia', 'Ethiopia'), ('United States', 'United States'), ('Rwanda', 'Rwanda'), ('Somalia', 'Somalia'), ('South Sudan', 'South Sudan'), ('DR Congo', 'DR Congo')], max_length=50)),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='User.tenant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('owner', 'Owner'), ('manager', 'Manager'), ('tenant', 'Tenant')], max_length=10)),
                ('name', models.CharField(max_length=100, null=True)),
                ('email', models.EmailField(max_length=254, null=True, unique=True)),
                ('joined', models.DateTimeField(auto_now_add=True)),
                ('avatar', models.ImageField(default='avatars/avatar.jpg', null=True, upload_to='media/profile')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='TenantRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('id_no', models.CharField(max_length=20)),
                ('phone_number', models.CharField(max_length=15)),
                ('house_number', models.CharField(max_length=10)),
                ('no_rooms', models.IntegerField()),
                ('occupants', models.IntegerField()),
                ('vehicle_no', models.CharField(max_length=15)),
                ('tenant_id', models.CharField(max_length=20)),
                ('sum_insured', models.DecimalField(decimal_places=2, max_digits=10)),
                ('lease_start_date', models.DateField()),
                ('lease_end_date', models.DateField()),
                ('photo', models.ImageField(default='avatars/avatar.jpg', upload_to='media/tenants')),
                ('joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='User.property')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='tenant',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='reviews/images')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='User.property')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='property',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ManagerRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('description', models.TextField()),
                ('phone_number', models.CharField(max_length=15)),
                ('address', models.CharField(max_length=255)),
                ('county', models.CharField(max_length=100)),
                ('zip_code', models.CharField(max_length=10)),
                ('country', models.CharField(choices=[('Kenya', 'Kenya'), ('Uganda', 'Uganda'), ('Tanzania', 'Tanzania'), ('Burundi', 'Burundi'), ('Comoros', 'Comoros'), ('Djobouti', 'Djobouti'), ('Eritrea', 'Eritrea'), ('Ethiopia', 'Ethiopia'), ('Madagascar', 'Madagascar'), ('Malawi', 'Malawi'), ('Mauritius', 'Mauritius'), ('Mozambique', 'Mozambique'), ('Rwanda', 'Rwanda'), ('Seychelles', 'Seychelles'), ('Somalia', 'Somalia'), ('South_sudan', 'South Sudan'), ('Zambia', 'Zambia'), ('Zimbabwe', 'Zimbabwe')], max_length=50)),
                ('language', models.CharField(choices=[('Swahili', 'Swahili'), ('English', 'English'), ('French', 'French'), ('German', 'German'), ('Portuguese', 'Portuguese')], max_length=50)),
                ('photo', models.ImageField(default='avatars/avatar.jpg', upload_to='media/managers')),
                ('joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='User.property')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='manager',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('is_received', models.BooleanField(default=False)),
                ('is_read', models.BooleanField(default=False)),
                ('file', models.FileField(blank=True, null=True, upload_to='messages/files')),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='property_messages', to='User.property')),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_messages', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
